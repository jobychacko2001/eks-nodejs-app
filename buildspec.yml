version: 0.2

phases:
  install:
    commands:
      - echo "Navigating to the App directory...."
      - cd App
      - echo "Installing dependencies..."
      - npm install
      - echo "Installing kubectl..."
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      - echo "Configuring AWS CLI for EKS..."
      - aws eks --region us-east-1 update-kubeconfig --name private-eks-cluster

  pre_build:
    commands:
      - echo "Checking EKS cluster status..."
      - CLUSTER_STATUS=$(aws eks describe-cluster --name private-eks-cluster --query cluster.status --region us-east-1 --output text)
      - echo "EKS Cluster Status: $CLUSTER_STATUS"
      - - echo "EKS Cluster Status: $CLUSTER_STATUS" && if [ "$CLUSTER_STATUS" != "ACTIVE" ]; then echo "EKS cluster is not active. Exiting..."; exit 1; fi
      - echo "Cluster is active, proceeding with deployment..."

  build:
    commands:
      - echo "Running tests..."
      - npm test || echo "Tests not found, continuing build..."
      - echo "Logging in to Docker registry..."
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_REPO_URI
      - echo "Building Docker image..."
      - docker build -t $ECR_REPO_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION .
      - echo "Pushing Docker image to ECR..."
      - docker push $ECR_REPO_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION

  post_build:
    commands:
      - echo "Build & test phase completed!"
      - echo "Deploying to EKS..."
      - kubectl apply -f k8s/deployment.yaml
      - kubectl apply -f k8s/service.yaml

artifacts:
  files:
    - '**/*'
